# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET CI Generic

on:
  workflow_call:
    inputs:
      os:
        description: 'Operating system to run the tests on'
        type: string
        required: true
      coverage:
        description: 'Whether to generate a code coverage report'
        type: boolean
        default: false
    secrets:
      CODECOV_TOKEN:
        description: 'Token for uploading coverage reports to Codecov'
        required: false

jobs:
  build:
    runs-on: ${{ inputs.os }}
    steps:
      - name: Fail on missing secrets
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ inputs.coverage && env.CODECOV_TOKEN == '' }}
        run: |
          echo "CODECOV_TOKEN is required for uploading coverage reports to Codecov."
          exit 1

      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: './global.json'
          cache: true
          cache-dependency-path: 'WallProjections.Test/packages.lock.json'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: WallProjections/Scripts/Test/requirements.txt

      - name: Install Python dependencies
        run: pip install -r WallProjections/Scripts/Test/requirements.txt

      - name: Install LibVLCSharp dependencies
        if: ${{ startsWith(inputs.os, 'ubuntu') }}
        run: sudo apt-get update -y && sudo apt-get install -y libvlc-dev vlc

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c DebugSkipPython

      - name: Test
        if: ${{ !inputs.coverage }}
        run: dotnet test --no-build -c DebugSkipPython --verbosity normal

      - name: Test & generate Code Coverage report
        if: ${{ inputs.coverage }}
        run: >
          dotnet test --no-build -c DebugSkipPython --verbosity normal \
              --collect:"XPlat Code Coverage" --settings coverlet.runsettings --results-directory TestResults

      - name: Test Python
        if: ${{ (success() || failure()) && !inputs.coverage }}
        run: python3 -m unittest discover -s ./WallProjections

      - name: Upload coverage reports to Codecov
        if: ${{ inputs.coverage }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./TestResults
          verbose: true
